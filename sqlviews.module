<?php

//  $loader = require_once __DIR__ . '/vendor/autoload.php';

// use Symfony\Component\Yaml

/**
 * @file
 * Proof of Concept for writing a gizmo for learning YAML.
 */

/**
 * Implements hook_menu().
 */
function sqlviews_menu() {
  $admin_config_dev_sqlviews_path = 'admin/config/development/sqlviews';
  $items[$admin_config_dev_sqlviews_path] = array(
    'title' => 'SQL-Views',
    'description' => 'Description of SQL-Views Configuration',
    'page callback' => 'sqlviews_overview',
    /*pretrash*/// 'page arguments' => array('sqlviews_admin'),
    'access arguments' => array('administer sqlviews'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'sqlviews.admin.inc',
   );
  $items[$admin_config_dev_sqlviews_path . '/overview'] = array(
    /*pretrash*/// 'title' => 'SQL-Views imap_fetch_overview(imap_stream, sequence)',
    /*pretrash*/// 'description' => 'Description of SQL-Views Overview',
    /*pretrash*/// 'page callback' => 'sqlviews_ooverview',
    /*pretrash*/// 'page arguments' => array('sqlviews_test'),
    /*pretrash*/// 'access arguments' => array('administer sqlviews'),
    'title' => 'Overview',
    'weight' => 1,
    'type' => MENU_DEFAULT_LOCAL_TASK,
   );
  $items[$admin_config_dev_sqlviews_path . '/content_types'] = array(
    'title' => 'Content Types',
    'description' => 'Description of SQL-Views Test',
    'page callback' => 'sqlviews_page',
    // 'page callback' => 'drupal_get_form',
    'page arguments' => array('content_types'),
    'access arguments' => array('administer sqlviews'),
    'weight' => 2,
    'type' => MENU_LOCAL_TASK,
    'file' => 'sqlviews.admin.inc',
   );
  $items[$admin_config_dev_sqlviews_path . '/users'] = array(
    'title' => 'Users',
    'description' => 'Description of SQL-Views Settings',
    'page callback' => 'sqlviews_page',
    // 'page callback' => 'drupal_get_form',
    'page arguments' => array('users'),
    'access arguments' => array('administer sqlviews'),
    'weight' => 3,
    'type' => MENU_LOCAL_TASK,
    'file' => 'sqlviews.admin.inc',
   );
  $items[$admin_config_dev_sqlviews_path . '/result'] = array(
    'title' => 'sqlVIEWS Result',
    'description' => 'Render Results for the sqlVIEW module.',
    'page callback' => 'sqlviews_result',
    'access callback' => TRUE,
    'type'=> MENU_CALLBACK,
    'file' => 'sqlviews.admin.inc',
  );

  $items['sqlviews'] = array(
    'title' => 'sqlVIEWS Test',
    'description' => 'Simple Test Page to Render the sqlVIEW.',
    'page callback' => 'sqlviews_dpm_page',
    'access callback' => TRUE,
    'file' => 'sqlviews.admin.inc',
  );
  $items['sqlviews/todo'] = array(
    'title' => 'sqlVIEWS To-Do',
    'description' => 'Simple To-Do List for the sqlVIEW module.',
    'page callback' => 'sqlviews_todo_page',
    'access callback' => TRUE,
    'type'=> MENU_CALLBACK,
  );
  $items['sqlviews/result'] = array(
    'title' => 'sqlVIEWS Result',
    'description' => 'Render Results for the sqlVIEW module.',
    'page callback' => 'sqlviews_dpm_result',
    'access callback' => TRUE,
    'type'=> MENU_CALLBACK,
    'file' => 'sqlviews.admin.inc',
  );
  return $items;
}
/**
 * Implements hook_permission
 */
function sqlviews_permission() {
  return array(
    'administer sqlviews' => array(
      'title' => t('Administer SQL-Views'),
      'description' => t('Perform administration tasks related to the SQL-Views module'),
    ),
  );
}


/**
 * Page demonstrating embedding a form on a page.
 * This should be MOOT at this juncture, but seems like a more extensible way to work
 */
function sqlviews_todo_page() {
	drupal_set_message('Line: ' . __LINE__. ' File: ' . __FILE__);
	$todo_array['brainstorm']['legend'] = 'Brain Strom';
	$todo_array['brainstorm']['item'][] = 'Include Article and Basic Page';
	$todo_array['brainstorm']['item'][] = 'Flesh-Out how to handle all kinds of Date fields &mdash; databse Date, ISO Date string, Integer';

	$buffer = '';
	$fieldset_class = ' class="collapsible"';
	// $fieldset_class = ' class="collapsible collapsed"';
	foreach ($todo_array as $kind => $data_array) {
		$buffer .= "<fieldset{$fieldset_class}><legend>".$data_array['legend'].'</legend>';
		$buffer .= '<p><ul>';
		foreach ($data_array['item'] as $index => $string) {
			$buffer .= '<li>' . t($string) . '</li>';
		}
		$buffer .= '</ul></p>';
		$buffer .= '</fieldset>';
	}

	$build = array(
		'header_text' => array(
		  '#type' => 'markup',
		  '#markup' => '<p>' . t("Simple To-Do List for the sqlVIEW module:") . '</p><p>' . $buffer. '</p>',
		),
	);
	return $build;
}

